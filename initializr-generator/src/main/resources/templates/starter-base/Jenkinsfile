#!/usr/bin/groovy
@Library('github.com/SprintHive/sprinthive-pipeline-library')

def componentName = '{{name}}'
def versionTag = ''
def resourcesDir = 'config/kubernetes'
def dockerImage

javaNode {

    def namespace = ''
    def deployStage = ''

    stage('Compile source') {
        def scmInfo = checkout scm
        if (scmInfo == null || scmInfo.GIT_BRANCH == null) {
            currentBuild.result = 'ABORTED'
            error('Git branch is nullâ€¦')
        } else if (scmInfo.GIT_BRANCH == 'origin/master') {
            namespace = 'pre-prod'
            deployStage = 'pre-production'
        } else {
            namespace = scmInfo.GIT_BRANCH.startsWith('origin/') ? scmInfo.GIT_BRANCH - 'origin/' : scmInfo.GIT_BRANCH
            deployStage = namespace
        }

        versionTag = getNewVersion{}
        dockerImage = "eu.gcr.io/jons-world/$componentName:${versionTag}"

        container(name: 'gradle') {
            sh "gradle bootJar"
        }
    }

    stage('Publish docker image') {
        container('docker') {
            docker.withRegistry("https://eu.gcr.io", "gcr:honeypot-gcr-credentials") {
                sh "docker build -t ${dockerImage} ."
                docker.image(dockerImage).push()
                docker.image(dockerImage).push('latest')
            }
        }
    }

    stage("Rollout to ${namespace}") {
        helmDeploy([
            releaseName:  "{{name}}",
            namespace:  namespace,
            chartName:  "base-java",
            imageTag:  versionTag,
            overrides:  [
                "name=$componentName",
                "nameOverride=$componentName",
                "image.repository=eu.gcr.io/jons-world/$componentName"
            ]
        ])
    }
}
