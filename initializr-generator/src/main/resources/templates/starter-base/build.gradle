buildscript {
    ext {
        {{#buildPropertiesGradle}}
        {{key}} = '{{value}}'
        {{/buildPropertiesGradle}}
    }
    repositories {
        mavenLocal()
        mavenCentral()
        {{^isRelease}}
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        {{/isRelease}}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        {{^bootOneThreeAvailable}}
        classpath('io.spring.gradle:dependency-management-plugin:{{dependencyManagementPluginVersion}}')
        {{/bootOneThreeAvailable}}
        {{#kotlin}}
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        {{/kotlin}}
    }
}

apply plugin: '{{language}}'
{{#kotlin}}
apply plugin: 'kotlin-spring'
{{/kotlin}}
apply plugin: 'eclipse'
apply plugin: '{{springBootPluginName}}'
{{^bootOneThreeAvailable}}
apply plugin: 'io.spring.dependency-management'
{{/bootOneThreeAvailable}}
{{#bootTwoZeroAvailable}}
apply plugin: 'io.spring.dependency-management'
{{/bootTwoZeroAvailable}}

group = '{{groupId}}'
version = '{{version}}'
sourceCompatibility = {{javaVersion}}

{{#kotlin}}
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]{{#java8OrLater}}
        jvmTarget = "1.8"{{/java8OrLater}}
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]{{#java8OrLater}}
        jvmTarget = "1.8"{{/java8OrLater}}
    }
}
{{/kotlin}}

bootJar {
    baseName "{{name}}"
}

repositories {
    mavenLocal()
    maven {
        credentials {
            username 'admin'
            password 'admin123'
        }
        url 'http://nexus/content/groups/public'
    }
    mavenCentral()
    {{#repositoryValues}}
    maven { url "{{value.url}}" }
    {{/repositoryValues}}
}

{{#providedDependencies}}
configurations {
    providedRuntime
}
{{/providedDependencies}}

{{^buildPropertiesVersions.empty}}
ext {
    {{#buildPropertiesVersions}}
    {{key}} = '{{value}}'
{{/buildPropertiesVersions}}
}

{{/buildPropertiesVersions.empty}}
dependencies {
    {{#compileDependencies}}
    compile('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
    {{/compileDependencies}}
    {{#kotlin}}
    compile("org.jetbrains.kotlin:{{kotlinStdlibArtifactId}}{{^kotlinSupport}}:${kotlinVersion}{{/kotlinSupport}}")
    compile("org.jetbrains.kotlin:kotlin-reflect{{^kotlinSupport}}:${kotlinVersion}{{/kotlinSupport}}")
    {{/kotlin}}
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-json')
    compile('io.micrometer:micrometer-registry-prometheus:1.0.3')
    compile('net.logstash.logback:logstash-logback-encoder:4.11')
    compile('org.projectlombok:lombok:1.16.18')
    {{#runtimeDependencies}}
    runtime('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
    {{/runtimeDependencies}}
    {{#compileOnlyDependencies}}
    compileOnly('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
    {{/compileOnlyDependencies}}
    {{#providedDependencies}}
    providedRuntime('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
    {{/providedDependencies}}
    testCompile('org.springframework.boot:spring-boot-starter-test')
    {{#testDependencies}}
    testCompile('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
    {{/testDependencies}}
}
{{#hasBoms}}

dependencyManagement {
    imports {
        {{#reversedBoms}}
        mavenBom "{{groupId}}:{{artifactId}}:{{versionToken}}"
        {{/reversedBoms}}
    }
}
{{/hasBoms}}
